diff -Naur R-3.6.0/src/library/utils/src/utils.c ./patch/R-3.6.0/src/library/utils/src/utils.c
--- R-3.6.0/src/library/utils/src/utils.c	2019-05-30 16:59:00.000000000 -0500
+++ ./patch/R-3.6.0/src/library/utils/src/utils.c	2018-09-25 03:45:44.000000000 -0500
@@ -57,7 +57,15 @@
 
 SEXP crc64(SEXP in)
 {
-    return do_R_crc64(in);
+    uint64_t crc = 0;
+    char ans[17];
+    if (!isString(in)) error("input must be a character string");
+    const char *str = CHAR(STRING_ELT(in, 0));
+
+    /* Seems this is really 64-bit only on 64-bit platforms */
+    crc = lzma_crc64((uint8_t *)str, strlen(str), crc);
+    snprintf(ans, 17, "%lx", (long unsigned int) crc);
+    return mkString(ans);
 }
 
 // As from 3.3.0 this means on Unix.
diff -Naur R-3.6.0/src/main/util.c ./patch/R-3.6.0/src/main/util.c
--- R-3.6.0/src/main/util.c	2019-05-30 17:00:21.000000000 -0500
+++ ./patch/R-3.6.0/src/main/util.c	2019-03-28 18:02:33.000000000 -0500
@@ -2244,8 +2244,10 @@
 
 #include <lzma.h>
 
-SEXP do_R_crc64(SEXP in)
+SEXP attribute_hidden do_crc64(SEXP call, SEXP op, SEXP args, SEXP rho)
 {
+    checkArity(op, args);
+    SEXP in = CAR(args);
     uint64_t crc = 0;
     char ans[17];
     if (!isString(in)) error("input must be a character string");
@@ -2257,13 +2259,6 @@
     return mkString(ans);
 }
 
-SEXP attribute_hidden do_crc64(SEXP call, SEXP op, SEXP args, SEXP rho)
-{
-	checkArity(op, args);
-	SEXP in = CAR(args);
-	return do_R_crc64(in);
-}
-
 static void
 bincode(double *x, R_xlen_t n, double *breaks, int nb,
 	int *code, int right, int include_border)
